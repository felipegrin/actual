{"version":3,"file":"AppliedFilters.uagH0Pv6.chunk.js","sources":["../../../src/icons/v1/Filter.tsx","../../../src/components/common/MenuButton.tsx","../../../src/components/filters/ConditionsOpMenu.tsx","../../../src/components/filters/CompactFiltersButton.tsx","../../../src/components/filters/FiltersButton.tsx","../../../src/components/filters/OpButton.tsx","../../../src/components/filters/subfieldFromFilter.ts","../../../src/components/filters/subfieldToOptions.ts","../../../src/components/filters/updateFilterReducer.ts","../../../src/components/filters/FiltersMenu.jsx","../../../src/components/filters/FilterExpression.tsx","../../../src/components/filters/AppliedFilters.tsx"],"sourcesContent":["import * as React from 'react';\nimport type { SVGProps } from 'react';\nexport const SvgFilter = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    style={{\n      color: 'inherit',\n      ...props.style,\n    }}\n  >\n    <path d=\"m12 12 8-8V0H0v4l8 8v8l4-4v-4z\" fill=\"currentColor\" />\n  </svg>\n);\n","import React, { type ComponentPropsWithoutRef, forwardRef } from 'react';\n\nimport { SvgDotsHorizontalTriple } from '../../icons/v1';\n\nimport { Button } from './Button2';\n\ntype MenuButtonProps = ComponentPropsWithoutRef<typeof Button>;\n\nexport const MenuButton = forwardRef<HTMLButtonElement, MenuButtonProps>(\n  (props, ref) => {\n    return (\n      <Button ref={ref} variant=\"bare\" aria-label=\"Menu\" {...props}>\n        <SvgDotsHorizontalTriple\n          width={15}\n          height={15}\n          style={{ transform: 'rotateZ(90deg)' }}\n        />\n      </Button>\n    );\n  },\n);\n\nMenuButton.displayName = 'MenuButton';\n","import React from 'react';\n\nimport { type RuleConditionEntity } from 'loot-core/types/models';\n\nimport { theme } from '../../style';\nimport { Text } from '../common/Text';\nimport { View } from '../common/View';\nimport { FieldSelect } from '../modals/EditRule';\n\nexport function ConditionsOpMenu({\n  conditionsOp,\n  onChange,\n  conditions,\n}: {\n  conditionsOp: string;\n  onChange: (value: 'and' | 'or') => void;\n  conditions: RuleConditionEntity[];\n}) {\n  return conditions.length > 1 ? (\n    <Text style={{ color: theme.pageText, marginTop: 11, marginRight: 5 }}>\n      <FieldSelect\n        style={{ display: 'inline-flex' }}\n        fields={[\n          ['and', 'all'],\n          ['or', 'any'],\n        ]}\n        value={conditionsOp}\n        onChange={onChange}\n      />\n      of:\n    </Text>\n  ) : (\n    <View />\n  );\n}\n","import React from 'react';\n\nimport { SvgFilter } from '../../icons/v1';\nimport { Button } from '../common/Button';\n\nexport function CompactFiltersButton({ onClick }: { onClick: () => void }) {\n  return (\n    <Button type=\"bare\" onClick={onClick}>\n      <SvgFilter width={15} height={15} />\n    </Button>\n  );\n}\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { SvgFilter } from '../../icons/v1/Filter';\nimport { Button } from '../common/Button';\n\nexport function FiltersButton({ onClick }: { onClick: () => void }) {\n  const { t } = useTranslation();\n\n  return (\n    <Button type=\"bare\" onClick={onClick} title={t('Filters')}>\n      <SvgFilter style={{ width: 12, height: 12, marginRight: 5 }} /> Filter\n    </Button>\n  );\n}\n","import React from 'react';\n\nimport { friendlyOp } from 'loot-core/src/shared/rules';\n\nimport { type CSSProperties, theme } from '../../style';\nimport { Button } from '../common/Button';\n\ntype OpButtonProps = {\n  op: string;\n  selected: boolean;\n  onClick: () => void;\n  style?: CSSProperties;\n};\n\nexport function OpButton({ op, selected, style, onClick }: OpButtonProps) {\n  return (\n    <Button\n      type=\"bare\"\n      style={{\n        backgroundColor: theme.pillBackground,\n        marginBottom: 5,\n        ...style,\n        ...(selected && {\n          color: theme.buttonNormalSelectedText,\n          '&,:hover,:active': {\n            backgroundColor: theme.buttonNormalSelectedBackground,\n            color: theme.buttonNormalSelectedText,\n          },\n        }),\n      }}\n      onClick={onClick}\n    >\n      {friendlyOp(op)}\n    </Button>\n  );\n}\n","import { type RuleConditionEntity } from 'loot-core/src/types/models';\n\nexport function subfieldFromFilter({\n  field,\n  options,\n  value,\n}: Pick<RuleConditionEntity, 'field' | 'options' | 'value'>) {\n  if (field === 'date') {\n    if (typeof value === 'string') {\n      if (value.length === 7) {\n        return 'month';\n      } else if (value.length === 4) {\n        return 'year';\n      }\n    }\n  }\n\n  if (field === 'amount') {\n    if (options && options.inflow) {\n      return 'amount-inflow';\n    } else if (options && options.outflow) {\n      return 'amount-outflow';\n    }\n  }\n\n  return field;\n}\n","import { type RuleConditionEntity } from 'loot-core/src/types/models';\n\nexport function subfieldToOptions(field: string, subfield: string) {\n  let setOptions: RuleConditionEntity['options'];\n  switch (field) {\n    case 'amount':\n      switch (subfield) {\n        case 'amount-inflow':\n          setOptions = { inflow: true };\n          break;\n        case 'amount-outflow':\n          setOptions = { outflow: true };\n          break;\n        default:\n          break;\n      }\n      break;\n    case 'date':\n      switch (subfield) {\n        case 'month':\n          setOptions = { month: true };\n          break;\n        case 'year':\n          setOptions = { year: true };\n          break;\n        default:\n          break;\n      }\n      break;\n    default:\n      break;\n  }\n  return setOptions;\n}\n","import { makeValue, FIELD_TYPES } from 'loot-core/src/shared/rules';\nimport { type RuleConditionEntity } from 'loot-core/src/types/models';\n\nexport function updateFilterReducer(\n  state: Pick<RuleConditionEntity, 'op' | 'field' | 'value'>,\n  action: { type: 'set-op' | 'set-value' } & Pick<\n    RuleConditionEntity,\n    'op' | 'value'\n  >,\n) {\n  switch (action.type) {\n    case 'set-op': {\n      const type = FIELD_TYPES.get(state.field);\n      let value = state.value;\n      if (\n        (type === 'id' || type === 'string') &&\n        (action.op === 'contains' ||\n          action.op === 'matches' ||\n          action.op === 'is' ||\n          action.op === 'doesNotContain' ||\n          action.op === 'isNot' ||\n          action.op === 'hasTags')\n      ) {\n        // Clear out the value if switching between contains or\n        // is/oneof for the id or string type\n        value = null;\n      }\n      return { ...state, op: action.op, value };\n    }\n    case 'set-value': {\n      const { value } = makeValue(action.value, {\n        type: FIELD_TYPES.get(state.field),\n      });\n      return { ...state, value };\n    }\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n","import React, { useState, useRef, useEffect, useReducer } from 'react';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { Trans, useTranslation } from 'react-i18next';\n\nimport { FocusScope } from '@react-aria/focus';\nimport {\n  parse as parseDate,\n  format as formatDate,\n  isValid as isDateValid,\n} from 'date-fns';\n\nimport { useFilters } from 'loot-core/src/client/data-hooks/filters';\nimport { send } from 'loot-core/src/platform/client/fetch';\nimport { getMonthYearFormat } from 'loot-core/src/shared/months';\nimport {\n  mapField,\n  deserializeField,\n  getFieldError,\n  unparse,\n  FIELD_TYPES,\n  TYPE_INFO,\n} from 'loot-core/src/shared/rules';\nimport { titleFirst } from 'loot-core/src/shared/util';\n\nimport { useDateFormat } from '../../hooks/useDateFormat';\nimport { styles, theme } from '../../style';\nimport { Button } from '../common/Button';\nimport { Menu } from '../common/Menu';\nimport { Popover } from '../common/Popover';\nimport { Select } from '../common/Select';\nimport { Stack } from '../common/Stack';\nimport { Text } from '../common/Text';\nimport { Tooltip } from '../common/Tooltip';\nimport { View } from '../common/View';\nimport { GenericInput } from '../util/GenericInput';\n\nimport { CompactFiltersButton } from './CompactFiltersButton';\nimport { FiltersButton } from './FiltersButton';\nimport { OpButton } from './OpButton';\nimport { subfieldFromFilter } from './subfieldFromFilter';\nimport { subfieldToOptions } from './subfieldToOptions';\nimport { updateFilterReducer } from './updateFilterReducer';\n\nlet isDatepickerClick = false;\n\nconst filterFields = [\n  'date',\n  'account',\n  'payee',\n  'notes',\n  'category',\n  'amount',\n  'cleared',\n  'reconciled',\n  'saved',\n].map(field => [field, mapField(field)]);\n\nfunction ConfigureField({\n  field,\n  initialSubfield = field,\n  op,\n  value,\n  dispatch,\n  onApply,\n}) {\n  const { t } = useTranslation();\n  const [subfield, setSubfield] = useState(initialSubfield);\n  const inputRef = useRef();\n  const prevOp = useRef(null);\n\n  useEffect(() => {\n    if (prevOp.current !== op && inputRef.current) {\n      inputRef.current.focus();\n    }\n    prevOp.current = op;\n  }, [op]);\n\n  const type = FIELD_TYPES.get(field);\n  let ops = TYPE_INFO[type].ops.filter(op => op !== 'isbetween');\n\n  // Month and year fields are quite hacky right now! Figure out how\n  // to clean this up later\n  if (subfield === 'month' || subfield === 'year') {\n    ops = ['is'];\n  }\n\n  return (\n    <FocusScope>\n      <View style={{ marginBottom: 10 }}>\n        <Stack direction=\"row\" align=\"flex-start\">\n          {field === 'amount' || field === 'date' ? (\n            <Select\n              options={\n                field === 'amount'\n                  ? [\n                      ['amount', t('Amount')],\n                      ['amount-inflow', t('Amount (inflow)')],\n                      ['amount-outflow', t('Amount (outflow)')],\n                    ]\n                  : field === 'date'\n                    ? [\n                        ['date', t('Date')],\n                        ['month', t('Month')],\n                        ['year', t('Year')],\n                      ]\n                    : null\n              }\n              value={subfield}\n              onChange={sub => {\n                setSubfield(sub);\n\n                if (sub === 'month' || sub === 'year') {\n                  dispatch({ type: 'set-op', op: 'is' });\n                }\n              }}\n            />\n          ) : (\n            titleFirst(mapField(field))\n          )}\n          <View style={{ flex: 1 }} />\n        </Stack>\n      </View>\n\n      <View\n        style={{\n          color: theme.pageTextLight,\n          marginBottom: 10,\n        }}\n      >\n        {field === 'saved' && t('Existing filters will be cleared')}\n      </View>\n\n      <Stack\n        direction=\"row\"\n        align=\"flex-start\"\n        spacing={1}\n        style={{ flexWrap: 'wrap' }}\n      >\n        {type === 'boolean' ? (\n          <>\n            <OpButton\n              key=\"true\"\n              op=\"true\"\n              selected={value === true}\n              onClick={() => {\n                dispatch({ type: 'set-op', op: 'is' });\n                dispatch({ type: 'set-value', value: true });\n              }}\n            />\n            <OpButton\n              key=\"false\"\n              op=\"false\"\n              selected={value === false}\n              onClick={() => {\n                dispatch({ type: 'set-op', op: 'is' });\n                dispatch({ type: 'set-value', value: false });\n              }}\n            />\n          </>\n        ) : (\n          <>\n            <Stack\n              direction=\"row\"\n              align=\"flex-start\"\n              spacing={1}\n              style={{ flexWrap: 'wrap' }}\n            >\n              {ops.slice(0, 3).map(currOp => (\n                <OpButton\n                  key={currOp}\n                  op={currOp}\n                  selected={currOp === op}\n                  onClick={() => dispatch({ type: 'set-op', op: currOp })}\n                />\n              ))}\n            </Stack>\n            <Stack\n              direction=\"row\"\n              align=\"flex-start\"\n              spacing={1}\n              style={{ flexWrap: 'wrap' }}\n            >\n              {ops.slice(3, ops.length).map(currOp => (\n                <OpButton\n                  key={currOp}\n                  op={currOp}\n                  selected={currOp === op}\n                  onClick={() => dispatch({ type: 'set-op', op: currOp })}\n                />\n              ))}\n            </Stack>\n          </>\n        )}\n      </Stack>\n\n      <form action=\"#\">\n        {type !== 'boolean' && (\n          <GenericInput\n            inputRef={inputRef}\n            field={field}\n            subfield={subfield}\n            type={\n              type === 'id' &&\n              (op === 'contains' ||\n                op === 'matches' ||\n                op === 'doesNotContain' ||\n                op === 'hasTags')\n                ? 'string'\n                : type\n            }\n            value={value}\n            multi={op === 'oneOf' || op === 'notOneOf'}\n            style={{ marginTop: 10 }}\n            onChange={v => {\n              dispatch({ type: 'set-value', value: v });\n            }}\n          />\n        )}\n\n        <Stack\n          direction=\"row\"\n          justify=\"flex-end\"\n          align=\"center\"\n          style={{ marginTop: 15 }}\n        >\n          <View style={{ flex: 1 }} />\n          <Button\n            type=\"primary\"\n            onClick={e => {\n              e.preventDefault();\n              onApply({\n                field,\n                op,\n                value,\n                options: subfieldToOptions(field, subfield),\n              });\n            }}\n          >\n            <Trans>Apply</Trans>\n          </Button>\n        </Stack>\n      </form>\n    </FocusScope>\n  );\n}\n\nexport function FilterButton({ onApply, compact, hover, exclude }) {\n  const { t } = useTranslation();\n  const filters = useFilters();\n  const triggerRef = useRef(null);\n\n  const dateFormat = useDateFormat() || 'MM/dd/yyyy';\n\n  const [state, dispatch] = useReducer(\n    (state, action) => {\n      switch (action.type) {\n        case 'select-field':\n          return { ...state, fieldsOpen: true, condOpen: false };\n        case 'configure': {\n          const { field } = deserializeField(action.field);\n          const type = FIELD_TYPES.get(field);\n          const ops = TYPE_INFO[type].ops;\n          return {\n            ...state,\n            fieldsOpen: false,\n            condOpen: true,\n            field: action.field,\n            op: ops[0],\n            value: type === 'boolean' ? true : null,\n          };\n        }\n        case 'close':\n          return { fieldsOpen: false, condOpen: false, value: null };\n        default:\n          return updateFilterReducer(state, action);\n      }\n    },\n    { fieldsOpen: false, condOpen: false, field: null, value: null },\n  );\n\n  async function onValidateAndApply(cond) {\n    cond = unparse({ ...cond, type: FIELD_TYPES.get(cond.field) });\n\n    if (cond.type === 'date' && cond.options) {\n      if (cond.options.month) {\n        const date = parseDate(\n          cond.value,\n          getMonthYearFormat(dateFormat),\n          new Date(),\n        );\n        if (isDateValid(date)) {\n          cond.value = formatDate(date, 'yyyy-MM');\n        } else {\n          alert(t('Invalid date format'));\n          return;\n        }\n      } else if (cond.options.year) {\n        const date = parseDate(cond.value, 'yyyy', new Date());\n        if (isDateValid(date)) {\n          cond.value = formatDate(date, 'yyyy');\n        } else {\n          alert(t('Invalid date format'));\n          return;\n        }\n      }\n    }\n\n    const { error } =\n      cond.field !== 'saved' &&\n      (await send('rule-validate', {\n        conditions: [cond],\n        actions: [],\n      }));\n\n    const saved = filters.find(f => cond.value === f.id);\n\n    if (error && error.conditionErrors.length > 0) {\n      const field = titleFirst(mapField(cond.field));\n      alert(field + ': ' + getFieldError(error.conditionErrors[0]));\n    } else {\n      onApply(saved ? saved : cond);\n      dispatch({ type: 'close' });\n    }\n  }\n  useHotkeys('f', () => dispatch({ type: 'select-field' }), {\n    scopes: ['app'],\n  });\n\n  return (\n    <View>\n      <View ref={triggerRef}>\n        <Tooltip\n          style={{\n            ...styles.tooltip,\n            lineHeight: 1.5,\n            padding: '6px 10px',\n          }}\n          content={\n            <Text>\n              <Trans>Filters</Trans>\n            </Text>\n          }\n          placement=\"bottom start\"\n          triggerProps={{\n            isDisabled: !hover,\n          }}\n        >\n          {compact ? (\n            <CompactFiltersButton\n              onClick={() => dispatch({ type: 'select-field' })}\n            />\n          ) : (\n            <FiltersButton onClick={() => dispatch({ type: 'select-field' })} />\n          )}\n        </Tooltip>\n      </View>\n\n      <Popover\n        triggerRef={triggerRef}\n        placement=\"bottom start\"\n        isOpen={state.fieldsOpen}\n        onOpenChange={() => dispatch({ type: 'close' })}\n        data-testid=\"filters-select-tooltip\"\n      >\n        <Menu\n          onMenuSelect={name => {\n            dispatch({ type: 'configure', field: name });\n          }}\n          items={filterFields\n            .filter(f => (exclude ? !exclude.includes(f[0]) : true))\n            .sort()\n            .map(([name, text]) => ({\n              name,\n              text: titleFirst(text),\n            }))}\n        />\n      </Popover>\n\n      <Popover\n        triggerRef={triggerRef}\n        placement=\"bottom start\"\n        isOpen={state.condOpen}\n        onOpenChange={() => {\n          dispatch({ type: 'close' });\n        }}\n        shouldCloseOnInteractOutside={element => {\n          // Datepicker selections for some reason register 2x clicks\n          // We want to keep the popover open after selecting a date.\n          // So we ignore the \"close\" event on selection + the subsequent event.\n          if (element.dataset.pikaYear) {\n            isDatepickerClick = true;\n            return false;\n          }\n          if (isDatepickerClick) {\n            isDatepickerClick = false;\n            return false;\n          }\n\n          return true;\n        }}\n        style={{ width: 275, padding: 15, color: theme.menuItemText }}\n        data-testid=\"filters-menu-tooltip\"\n      >\n        {state.field && (\n          <ConfigureField\n            field={state.field}\n            op={state.op}\n            value={state.value}\n            dispatch={dispatch}\n            onApply={onValidateAndApply}\n          />\n        )}\n      </Popover>\n    </View>\n  );\n}\n\nexport function FilterEditor({ field, op, value, options, onSave, onClose }) {\n  const [state, dispatch] = useReducer(\n    (state, action) => {\n      switch (action.type) {\n        case 'close':\n          onClose();\n          return state;\n        default:\n          return updateFilterReducer(state, action);\n      }\n    },\n    { field, op, value, options },\n  );\n\n  return (\n    <ConfigureField\n      field={state.field}\n      initialSubfield={subfieldFromFilter({ field, options, value })}\n      op={state.op}\n      value={state.value}\n      options={state.options}\n      dispatch={dispatch}\n      onApply={cond => {\n        cond = unparse({ ...cond, type: FIELD_TYPES.get(cond.field) });\n        onSave(cond);\n        onClose();\n      }}\n    />\n  );\n}\n","import React, { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { mapField, friendlyOp } from 'loot-core/src/shared/rules';\nimport { integerToCurrency } from 'loot-core/src/shared/util';\nimport { type RuleConditionEntity } from 'loot-core/src/types/models';\n\nimport { SvgDelete } from '../../icons/v0';\nimport { type CSSProperties, theme } from '../../style';\nimport { Button } from '../common/Button';\nimport { Popover } from '../common/Popover';\nimport { Text } from '../common/Text';\nimport { View } from '../common/View';\nimport { Value } from '../rules/Value';\n\nimport { FilterEditor } from './FiltersMenu';\nimport { subfieldFromFilter } from './subfieldFromFilter';\n\nlet isDatepickerClick = false;\n\ntype FilterExpressionProps<T extends RuleConditionEntity> = {\n  field: T['field'];\n  customName: T['customName'];\n  op: T['op'];\n  value: T['value'];\n  options: T['options'];\n  style?: CSSProperties;\n  onChange: (cond: T) => void;\n  onDelete: () => void;\n};\n\nexport function FilterExpression<T extends RuleConditionEntity>({\n  field: originalField,\n  customName,\n  op,\n  value,\n  options,\n  style,\n  onChange,\n  onDelete,\n}: FilterExpressionProps<T>) {\n  const { t } = useTranslation();\n  const [editing, setEditing] = useState(false);\n  const triggerRef = useRef(null);\n\n  const field = subfieldFromFilter({ field: originalField, value });\n\n  return (\n    <View\n      style={{\n        backgroundColor: theme.pillBackground,\n        borderRadius: 4,\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginRight: 10,\n        marginTop: 10,\n        ...style,\n      }}\n    >\n      <Button\n        ref={triggerRef}\n        type=\"bare\"\n        disabled={customName != null}\n        onClick={() => setEditing(true)}\n      >\n        <div style={{ paddingBlock: 1, paddingLeft: 5, paddingRight: 2 }}>\n          {customName ? (\n            <Text style={{ color: theme.pageTextPositive }}>{customName}</Text>\n          ) : (\n            <>\n              <Text style={{ color: theme.pageTextPositive }}>\n                {mapField(field, options)}\n              </Text>{' '}\n              <Text>{friendlyOp(op, null)}</Text>{' '}\n              <Value\n                value={value}\n                field={field}\n                inline={true}\n                valueIsRaw={\n                  op === 'contains' ||\n                  op === 'matches' ||\n                  op === 'doesNotContain' ||\n                  op === 'hasTags'\n                }\n              />\n            </>\n          )}\n        </div>\n      </Button>\n      <Button type=\"bare\" onClick={onDelete} aria-label={t('Delete filter')}>\n        <SvgDelete\n          style={{\n            width: 8,\n            height: 8,\n            margin: 4,\n          }}\n        />\n      </Button>\n\n      <Popover\n        triggerRef={triggerRef}\n        placement=\"bottom start\"\n        isOpen={editing}\n        onOpenChange={() => setEditing(false)}\n        shouldCloseOnInteractOutside={element => {\n          // Datepicker selections for some reason register 2x clicks\n          // We want to keep the popover open after selecting a date.\n          // So we ignore the \"close\" event on selection + the subsequent event.\n          if (element instanceof HTMLElement && element.dataset.pikaYear) {\n            isDatepickerClick = true;\n            return false;\n          }\n          if (isDatepickerClick) {\n            isDatepickerClick = false;\n            return false;\n          }\n\n          return true;\n        }}\n        style={{ width: 275, padding: 15, color: theme.menuItemText }}\n        data-testid=\"filters-menu-tooltip\"\n      >\n        <FilterEditor\n          field={originalField}\n          op={op}\n          value={\n            field === 'amount' && typeof value === 'number'\n              ? integerToCurrency(value)\n              : value\n          }\n          options={options}\n          onSave={onChange}\n          onClose={() => setEditing(false)}\n        />\n      </Popover>\n    </View>\n  );\n}\n","import React from 'react';\n\nimport { type RuleConditionEntity } from 'loot-core/src/types/models';\n\nimport { View } from '../common/View';\n\nimport { ConditionsOpMenu } from './ConditionsOpMenu';\nimport { FilterExpression } from './FilterExpression';\n\ntype AppliedFiltersProps = {\n  conditions: RuleConditionEntity[];\n  onUpdate: (\n    filter: RuleConditionEntity,\n    newFilter: RuleConditionEntity,\n  ) => void;\n  onDelete: (filter: RuleConditionEntity) => void;\n  conditionsOp: string;\n  onConditionsOpChange: (value: 'and' | 'or') => void;\n};\n\nexport function AppliedFilters({\n  conditions,\n  onUpdate,\n  onDelete,\n  conditionsOp,\n  onConditionsOpChange,\n}: AppliedFiltersProps) {\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        flexWrap: 'wrap',\n      }}\n    >\n      <ConditionsOpMenu\n        conditionsOp={conditionsOp}\n        onChange={onConditionsOpChange}\n        conditions={conditions}\n      />\n      {conditions.map((filter: RuleConditionEntity, i: number) => (\n        <FilterExpression\n          key={i}\n          customName={filter.customName}\n          field={filter.field}\n          op={filter.op}\n          value={filter.value}\n          options={filter.options}\n          onChange={newFilter => onUpdate(filter, newFilter)}\n          onDelete={() => onDelete(filter)}\n        />\n      ))}\n    </View>\n  );\n}\n"],"names":["SvgFilter","props","_jsx","svg","xmlns","viewBox","style","color","path","d","fill","MenuButton","forwardRef","ref","Button","variant","aria-label","SvgDotsHorizontalTriple","width","height","transform","displayName","ConditionsOpMenu","conditionsOp","onChange","conditions","length","_jsxs","Text","theme","pageText","marginTop","marginRight","FieldSelect","display","fields","value","View","CompactFiltersButton","onClick","type","FiltersButton","t","useTranslation","title","OpButton","op","selected","backgroundColor","pillBackground","marginBottom","buttonNormalSelectedText","buttonNormalSelectedBackground","friendlyOp","subfieldFromFilter","field","options","inflow","outflow","subfieldToOptions","subfield","setOptions","month","year","updateFilterReducer","state","action","FIELD_TYPES","get","makeValue","Error","isDatepickerClick","filterFields","map","mapField","ConfigureField","initialSubfield","dispatch","onApply","setSubfield","useState","inputRef","useRef","prevOp","useEffect","current","focus","ops","TYPE_INFO","filter","FocusScope","Stack","direction","align","Select","sub","titleFirst","flex","pageTextLight","spacing","flexWrap","_Fragment","slice","currOp","form","GenericInput","multi","v","justify","e","preventDefault","Trans","FilterButton","compact","hover","exclude","filters","useFilters","triggerRef","dateFormat","useDateFormat","useReducer","fieldsOpen","condOpen","deserializeField","onValidateAndApply","cond","unparse","date","parseDate","getMonthYearFormat","Date","isDateValid","formatDate","error","send","actions","saved","find","f","id","conditionErrors","alert","getFieldError","useHotkeys","scopes","Tooltip","styles","tooltip","lineHeight","padding","content","placement","triggerProps","isDisabled","Popover","isOpen","onOpenChange","data-testid","Menu","onMenuSelect","name","items","includes","sort","text","shouldCloseOnInteractOutside","element","dataset","pikaYear","menuItemText","FilterEditor","onSave","onClose","FilterExpression","originalField","customName","onDelete","editing","setEditing","borderRadius","flexDirection","alignItems","disabled","div","paddingBlock","paddingLeft","paddingRight","pageTextPositive","Value","inline","valueIsRaw","SvgDelete","margin","HTMLElement","integerToCurrency","AppliedFilters","onUpdate","onConditionsOpChange","i","newFilter"],"mappings":"qVAEO,MAAMA,EAAaC,GACxBC,EAAA,IAACC,MAAAA,CACE,GAAGF,EACJG,MAAM,6BACNC,QAAQ,YACRC,MAAO,CACLC,MAAO,UACP,GAAGN,EAAMK,KACX,EAEA,eAACE,OAAAA,CAAKC,EAAE,iCAAiCC,KAAK,cAAA,EAEhD,CAAA,ECNWC,GAAaC,EAAAA,WACxB,CAACX,EAAOY,UAEHC,EAAAA,CAAOD,IAAAA,EAAUE,QAAQ,OAAOC,aAAW,OAAQ,GAAGf,EACrD,eAACgB,EAAAA,CACCC,MAAO,GACPC,OAAQ,GACRb,MAAO,CAAEc,UAAW,gBAAiB,CAAA,IAK7C,EAEFT,GAAWU,YAAc,aCblB,SAASC,GAAiB,CAC/BC,aAAAA,EACAC,SAAAA,EACAC,WAAAA,GAKD,CACC,OAAOA,EAAWC,OAAS,EACzBC,EAAAA,KAACC,EAAAA,CAAKtB,MAAO,CAAEC,MAAOsB,EAAMC,SAAUC,UAAW,GAAIC,YAAa,CAAE,kBACjEC,EAAAA,CACC3B,MAAO,CAAE4B,QAAS,aAAc,EAChCC,OAAQ,CACN,CAAC,MAAO,KAAM,EACd,CAAC,KAAM,KAAM,CACd,EACDC,MAAOb,EACPC,SAAAA,CAAAA,GACA,SAIHa,EAAAA,IAAAA,EAAAA,CAAAA,CAAAA,CAEL,CC7BgBC,SAAAA,GAAqB,CAAEC,QAAAA,GAAkC,CACvE,aACGzB,EAAAA,CAAO0B,KAAK,OAAOD,QAAAA,EAClB,eAACvC,EAAAA,CAAUkB,MAAO,GAAIC,OAAQ,EAAA,IAGpC,CCLgBsB,SAAAA,GAAc,CAAEF,QAAAA,GAAkC,CAC1D,KAAA,CAAEG,EAAAA,GAAMC,IAEd,cACG7B,EAAAA,CAAO0B,KAAK,OAAOD,QAAAA,EAAkBK,MAAOF,EAAE,SAAA,kBAC5C1C,EAAAA,CAAUM,MAAO,CAAEY,MAAO,GAAIC,OAAQ,GAAIa,YAAa,CAAE,CAAA,GAAK,YAGrE,CCAO,SAASa,EAAS,CAAEC,GAAAA,EAAIC,SAAAA,EAAUzC,MAAAA,EAAOiC,QAAAA,GAAwB,CACtE,aACGzB,EAAAA,CACC0B,KAAK,OACLlC,MAAO,CACL0C,gBAAiBnB,EAAMoB,eACvBC,aAAc,EACd,GAAG5C,EACH,GAAIyC,GAAY,CACdxC,MAAOsB,EAAMsB,yBACb,mBAAoB,CAClBH,gBAAiBnB,EAAMuB,+BACvB7C,MAAOsB,EAAMsB,wBACf,CACF,CACF,EACAZ,QAAAA,WAECc,EAAWP,CAAAA,CAAAA,EAGlB,CCjCO,SAASQ,EAAmB,CACjCC,MAAAA,EACAC,QAAAA,EACApB,MAAAA,GACyD,CACzD,GAAImB,IAAU,QACR,OAAOnB,GAAU,SAAU,CACzBA,GAAAA,EAAMV,SAAW,EACZ,MAAA,QACT,GAAWU,EAAMV,SAAW,EACnB,MAAA,MAEX,CAGF,GAAI6B,IAAU,SAAU,CAClBC,GAAAA,GAAWA,EAAQC,OACd,MAAA,gBACT,GAAWD,GAAWA,EAAQE,QACrB,MAAA,gBAEX,CAEOH,OAAAA,CACT,CCxBgBI,SAAAA,GAAkBJ,EAAeK,EAAgB,CAC3DC,IAAAA,EACJ,OAAQN,EAAAA,CACN,IAAK,SACH,OAAQK,EAAAA,CACN,IAAK,gBACUC,EAAA,CAAEJ,OAAQ,EAAA,EACvB,MACF,IAAK,iBACUI,EAAA,CAAEH,QAAS,EAAA,EACxB,KAGJ,CACA,MACF,IAAK,OACH,OAAQE,EAAAA,CACN,IAAK,QACUC,EAAA,CAAEC,MAAO,EAAA,EACtB,MACF,IAAK,OACUD,EAAA,CAAEE,KAAM,EAAA,EACrB,KAGJ,CACA,KAGJ,CACOF,OAAAA,CACT,CC9BgBG,SAAAA,EACdC,EACAC,EAGC,CAED,OAAQA,EAAO1B,KAAI,CACjB,IAAK,SAAU,CACb,MAAMA,EAAO2B,EAAYC,IAAIH,EAAMV,KAAK,EACxC,IAAInB,EAAQ6B,EAAM7B,MAEfI,OAAAA,IAAS,MAAQA,IAAS,YAC1B0B,EAAOpB,KAAO,YACboB,EAAOpB,KAAO,WACdoB,EAAOpB,KAAO,MACdoB,EAAOpB,KAAO,kBACdoB,EAAOpB,KAAO,SACdoB,EAAOpB,KAAO,aAIRV,EAAA,MAEH,CAAE,GAAG6B,EAAOnB,GAAIoB,EAAOpB,GAAIV,MAAAA,CAAAA,CACpC,CACA,IAAK,YAAa,CAChB,KAAM,CAAEA,MAAAA,CAAUiC,EAAAA,EAAUH,EAAO9B,MAAO,CACxCI,KAAM2B,EAAYC,IAAIH,EAAMV,KAAK,CAAA,CACnC,EACO,MAAA,CAAE,GAAGU,EAAO7B,MAAAA,CAAAA,CACrB,CACA,QACE,MAAM,IAAIkC,MAAM,0BAA0BJ,EAAO1B,IAAI,EAAE,CAC3D,CACF,CCKA,IAAI+B,EAAoB,GAExB,MAAMC,GAAe,CACnB,OACA,UACA,QACA,QACA,WACA,SACA,UACA,aACA,SACAC,IAAIlB,GAAS,CAACA,EAAOmB,EAASnB,CAAAA,CAAO,CAAA,EAEvC,SAASoB,EAAe,CACtBpB,MAAAA,EACAqB,gBAAAA,EAAkBrB,EAClBT,GAAAA,EACAV,MAAAA,EACAyC,SAAAA,EACAC,QAAAA,GACD,CACO,KAAA,CAAEpC,EAAAA,GAAMC,IACR,CAACiB,EAAUmB,CAAY,EAAGC,WAASJ,CAAAA,EACnCK,EAAWC,EAAAA,SACXC,EAASD,SAAO,IAAA,EAEtBE,EAAAA,UAAU,IAAA,CACJD,EAAOE,UAAYvC,GAAMmC,EAASI,SACpCJ,EAASI,QAAQC,QAEnBH,EAAOE,QAAUvC,CAAAA,EAChB,CAACA,CAAAA,CAAG,EAEDN,MAAAA,EAAO2B,EAAYC,IAAIb,CAAAA,EACzBgC,IAAAA,EAAMC,EAAUhD,CAAK,EAAC+C,IAAIE,OAAO3C,GAAMA,IAAO,WAAA,EAI9Cc,OAAAA,IAAa,SAAWA,IAAa,UACjC2B,EAAA,CAAC,IAAA,UAING,EAAAA,iBACErD,EAAAA,CAAK/B,MAAO,CAAE4C,aAAc,EAAG,EAC9B,gBAACyC,EAAAA,CAAMC,UAAU,MAAMC,MAAM,uBAC1BtC,IAAU,UAAYA,IAAU,aAC9BuC,GAAAA,CACCtC,QACED,IAAU,SACN,CACE,CAAC,SAAUb,EAAE,QAAA,CAAU,EACvB,CAAC,gBAAiBA,EAAE,iBAAA,CAAmB,EACvC,CAAC,iBAAkBA,EAAE,kBAAA,CAAoB,CAAA,EAE3Ca,IAAU,OACR,CACE,CAAC,OAAQb,EAAE,MAAA,CAAQ,EACnB,CAAC,QAASA,EAAE,OAAA,CAAS,EACrB,CAAC,OAAQA,EAAE,MAAA,CAAQ,CAAA,EAErB,KAERN,MAAOwB,EACPpC,SAAUuE,GAAAA,CACRhB,EAAYgB,CAAAA,GAERA,IAAQ,SAAWA,IAAQ,SACpBlB,EAAA,CAAErC,KAAM,SAAUM,GAAI,IAAA,CAAK,CAExC,CAGFkD,CAAAA,EAAAA,EAAWtB,EAASnB,CAAAA,CAAAA,QAErBlB,EAAAA,CAAK/B,MAAO,CAAE2F,KAAM,CAAE,CAAA,cAI1B5D,EAAAA,CACC/B,MAAO,CACLC,MAAOsB,EAAMqE,cACbhD,aAAc,EAChB,EAECK,SAAAA,IAAU,SAAWb,EAAE,kCAAA,CAAA,SAGzBiD,EAAAA,CACCC,UAAU,MACVC,MAAM,aACNM,QAAS,EACT7F,MAAO,CAAE8F,SAAU,MAAO,EAEzB5D,SAAAA,IAAS,UACRb,EAAAA,KAAA0E,EAAAA,SAAA,iBACGxD,EAAAA,CAECC,GAAG,OACHC,SAAUX,IAAU,GACpBG,QAAS,IAAA,CACEsC,EAAA,CAAErC,KAAM,SAAUM,GAAI,IAAA,CAAK,EAC3B+B,EAAA,CAAErC,KAAM,YAAaJ,MAAO,EAAA,CAAK,CAC5C,GANI,MAAA,QAQLS,EAAAA,CAECC,GAAG,QACHC,SAAUX,IAAU,GACpBG,QAAS,IAAA,CACEsC,EAAA,CAAErC,KAAM,SAAUM,GAAI,IAAA,CAAK,EAC3B+B,EAAA,CAAErC,KAAM,YAAaJ,MAAO,EAAA,CAAM,CAC7C,GANI,OAAA,GAUR,EAAAT,EAAA,KAAA0E,WAAA,iBACGV,EAAAA,CACCC,UAAU,MACVC,MAAM,aACNM,QAAS,EACT7F,MAAO,CAAE8F,SAAU,MAAO,WAEzBb,EAAIe,MAAM,EAAG,CAAA,EAAG7B,IAAI8B,GACnBrG,EAAA,IAAC2C,EAAAA,CAECC,GAAIyD,EACJxD,SAAUwD,IAAWzD,EACrBP,QAAS,IAAMsC,EAAS,CAAErC,KAAM,SAAUM,GAAIyD,CAAAA,CAAO,CAHhDA,EAAAA,CAAAA,CAAAA,CAAAA,SAOVZ,EAAAA,CACCC,UAAU,MACVC,MAAM,aACNM,QAAS,EACT7F,MAAO,CAAE8F,SAAU,MAAO,WAEzBb,EAAIe,MAAM,EAAGf,EAAI7D,MAAM,EAAE+C,IAAI8B,GAC5BrG,EAAAA,IAAC2C,EAAAA,CAECC,GAAIyD,EACJxD,SAAUwD,IAAWzD,EACrBP,QAAS,IAAMsC,EAAS,CAAErC,KAAM,SAAUM,GAAIyD,CAAAA,CAAO,CAHhDA,EAAAA,CAAAA,CAAAA,CAAAA,eAWhBC,OAAAA,CAAKtC,OAAO,cACV1B,IAAS,WACRtC,EAAA,IAACuG,GAAAA,CACCxB,SAAAA,EACA1B,MAAAA,EACAK,SAAAA,EACApB,KACEA,IAAS,OACRM,IAAO,YACNA,IAAO,WACPA,IAAO,kBACPA,IAAO,WACL,SACAN,EAENJ,MAAAA,EACAsE,MAAO5D,IAAO,SAAWA,IAAO,WAChCxC,MAAO,CAAEyB,UAAW,EAAG,EACvBP,SAAUmF,GAAAA,CACC9B,EAAA,CAAErC,KAAM,YAAaJ,MAAOuE,CAAAA,CAAE,CACzC,CAAA,UAIHhB,EAAAA,CACCC,UAAU,MACVgB,QAAQ,WACRf,MAAM,SACNvF,MAAO,CAAEyB,UAAW,EAAG,kBAEtBM,EAAAA,CAAK/B,MAAO,CAAE2F,KAAM,CAAE,CAAA,SACtBnF,EAAAA,CACC0B,KAAK,UACLD,QAASsE,GAAAA,CACPA,EAAEC,eAAc,EACRhC,EAAA,CACNvB,MAAAA,EACAT,GAAAA,EACAV,MAAAA,EACAoB,QAASG,GAAkBJ,EAAOK,CAAAA,CAAAA,CACpC,CACF,EAEA,eAACmD,EAAAA,CAAM,SAAA,OAAA,aAMnB,CAEO,SAASC,GAAa,CAAElC,QAAAA,EAASmC,QAAAA,EAASC,MAAAA,EAAOC,QAAAA,GAAS,CACzD,KAAA,CAAEzE,EAAAA,GAAMC,IACRyE,EAAUC,IACVC,EAAapC,SAAO,IAAA,EAEpBqC,EAAaC,EAAmB,GAAA,aAEhC,CAACvD,EAAOY,CAAAA,EAAY4C,EAAAA,WACxB,CAACxD,EAAOC,IAAAA,CACN,OAAQA,EAAO1B,KAAI,CACjB,IAAK,eACI,MAAA,CAAE,GAAGyB,EAAOyD,WAAY,GAAMC,SAAU,EAAA,EACjD,IAAK,YAAa,CAChB,KAAM,CAAEpE,MAAAA,CAAUqE,EAAAA,EAAiB1D,EAAOX,KAAK,EACzCf,EAAO2B,EAAYC,IAAIb,CAAAA,EACvBgC,EAAMC,EAAUhD,CAAAA,EAAM+C,IACrB,MAAA,CACL,GAAGtB,EACHyD,WAAY,GACZC,SAAU,GACVpE,MAAOW,EAAOX,MACdT,GAAIyC,EAAI,CAAE,EACVnD,MAAOI,IAAS,UAAY,GAAO,IAAA,CAEvC,CACA,IAAK,QACI,MAAA,CAAEkF,WAAY,GAAOC,SAAU,GAAOvF,MAAO,IAAA,EACtD,QACS4B,OAAAA,EAAoBC,EAAOC,CAAAA,CACtC,CAAA,EAEF,CAAEwD,WAAY,GAAOC,SAAU,GAAOpE,MAAO,KAAMnB,MAAO,IAAA,CAAK,EAGjE,eAAeyF,EAAmBC,EAAI,CAGpC,GAFAA,EAAOC,EAAQ,CAAE,GAAGD,EAAMtF,KAAM2B,EAAYC,IAAI0D,EAAKvE,KAAK,CAAA,CAAE,EAExDuE,EAAKtF,OAAS,QAAUsF,EAAKtE,SAC3BsE,GAAAA,EAAKtE,QAAQM,MAAO,CAChBkE,MAAAA,EAAOC,EACXH,EAAK1F,MACL8F,GAAmBX,GACfY,IAAAA,IAAAA,EAEFC,GAAAA,EAAYJ,CAAO,EAChB5F,EAAAA,MAAQiG,EAAWL,EAAM,SAAA,MACzB,CACCtF,MAAAA,EAAE,qBAAA,CAAA,EACR,MACF,CAAA,SACSoF,EAAKtE,QAAQO,KAAM,CAC5B,MAAMiE,EAAOC,EAAUH,EAAK1F,MAAO,OAAQ,IAAI+F,IAAAA,EAC3CC,GAAAA,EAAYJ,CAAO,EAChB5F,EAAAA,MAAQiG,EAAWL,EAAM,MAAA,MACzB,CACCtF,MAAAA,EAAE,qBAAA,CAAA,EACR,MACF,CACF,EAGI,KAAA,CAAE4F,MAAAA,GACNR,EAAKvE,QAAU,SACd,MAAMgF,GAAK,gBAAiB,CAC3B9G,WAAY,CAACqG,CAAK,EAClBU,QAAS,CAAE,CAAA,CACb,EAEIC,EAAQrB,EAAQsB,KAAKC,GAAKb,EAAK1F,QAAUuG,EAAEC,EAAE,EAEnD,GAAIN,GAASA,EAAMO,gBAAgBnH,OAAS,EAAG,CAC7C,MAAM6B,EAAQyC,EAAWtB,EAASoD,EAAKvE,KAAK,CAAA,EAC5CuF,MAAMvF,EAAQ,KAAOwF,GAAcT,EAAMO,gBAAgB,CAAE,CAAA,CAAA,CAAA,MAEnDJ,EAAAA,GAAgBX,CAAAA,EACfjD,EAAA,CAAErC,KAAM,OAAA,CAAQ,CAE7B,CACW,OAAAwG,EAAA,IAAK,IAAMnE,EAAS,CAAErC,KAAM,cAAA,CAAmB,EAAA,CACxDyG,OAAQ,CAAC,KAAM,CAAA,CACjB,SAGG5G,EAAAA,iBACEA,EAAAA,CAAKxB,IAAKyG,EACT,eAAC4B,EAAAA,CACC5I,MAAO,CACL,GAAG6I,EAAOC,QACVC,WAAY,IACZC,QAAS,UACX,EACAC,cACG3H,EAAAA,CACC,eAACmF,EAAAA,CAAM,SAAA,SAAA,KAGXyC,UAAU,eACVC,aAAc,CACZC,WAAY,CAACxC,CACf,EAECD,SAAAA,EACC/G,EAAA,IAACoC,GAAAA,CACCC,QAAS,IAAMsC,EAAS,CAAErC,KAAM,cAAA,CAAe,CAAA,GAGjDtC,EAAA,IAACuC,GAAAA,CAAcF,QAAS,IAAMsC,EAAS,CAAErC,KAAM,cAAA,CAAe,CAAA,aAKnEmH,EAAAA,CACCrC,WAAAA,EACAkC,UAAU,eACVI,OAAQ3F,EAAMyD,WACdmC,aAAc,IAAMhF,EAAS,CAAErC,KAAM,OAAA,CAAQ,EAC7CsH,cAAY,yBAEZ,eAACC,EAAAA,CACCC,aAAcC,GAAAA,CACHpF,EAAA,CAAErC,KAAM,YAAae,MAAO0G,CAAAA,CAAK,CAC5C,EACAC,MAAO1F,GACJiB,OAAOkD,GAAMxB,EAAU,CAACA,EAAQgD,SAASxB,EAAE,EAAE,EAAI,EAAA,EACjDyB,KAAI,EACJ3F,IAAI,CAAC,CAACwF,EAAMI,CAAK,KAAM,CACtBJ,KAAAA,EACAI,KAAMrE,EAAWqE,CAAAA,CAAAA,EACnB,CAAA,WAILV,EAAAA,CACCrC,WAAAA,EACAkC,UAAU,eACVI,OAAQ3F,EAAM0D,SACdkC,aAAc,IAAA,CACHhF,EAAA,CAAErC,KAAM,OAAA,CAAQ,CAC3B,EACA8H,6BAA8BC,GAIxBA,EAAQC,QAAQC,UACElG,EAAA,GACb,IAELA,GACkBA,EAAA,GACb,IAGF,GAETjE,MAAO,CAAEY,MAAO,IAAKoI,QAAS,GAAI/I,MAAOsB,EAAM6I,YAAa,EAC5DZ,cAAY,gCAEX7F,EAAMV,OACLrD,EAAAA,IAACyE,EAAAA,CACCpB,MAAOU,EAAMV,MACbT,GAAImB,EAAMnB,GACVV,MAAO6B,EAAM7B,MACbyC,SAAAA,EACAC,QAAS+C,CAAAA,OAMrB,CAEgB8C,SAAAA,GAAa,CAAEpH,MAAAA,EAAOT,GAAAA,EAAIV,MAAAA,EAAOoB,QAAAA,EAASoH,OAAAA,EAAQC,QAAAA,GAAS,CACzE,KAAM,CAAC5G,EAAOY,CAAAA,EAAY4C,EAAAA,WACxB,CAACxD,EAAOC,IAAAA,CACN,OAAQA,EAAO1B,KAAI,CACjB,IAAK,QACHqI,OAAAA,IACO5G,EACT,QACSD,OAAAA,EAAoBC,EAAOC,CAAAA,CACtC,CAAA,EAEF,CAAEX,MAAAA,EAAOT,GAAAA,EAAIV,MAAAA,EAAOoB,QAAAA,CAAAA,CAAQ,EAG9B,aACGmB,EAAAA,CACCpB,MAAOU,EAAMV,MACbqB,gBAAiBtB,EAAmB,CAAEC,MAAAA,EAAOC,QAAAA,EAASpB,MAAAA,CAAAA,CAAM,EAC5DU,GAAImB,EAAMnB,GACVV,MAAO6B,EAAM7B,MACboB,QAASS,EAAMT,QACfqB,SAAAA,EACAC,QAASgD,GAAAA,CACPA,EAAOC,EAAQ,CAAE,GAAGD,EAAMtF,KAAM2B,EAAYC,IAAI0D,EAAKvE,KAAK,CAAA,CAAE,EAC5DqH,EAAO9C,CAAAA,EACP+C,GACF,CAAA,EAGN,CC5aA,IAAItG,EAAoB,GAaRuG,SAAAA,GAAgD,CAC9DvH,MAAOwH,EACPC,WAAAA,EACAlI,GAAAA,EACAV,MAAAA,EACAoB,QAAAA,EACAlD,MAAAA,EACAkB,SAAAA,EACAyJ,SAAAA,CAAAA,EACyB,CACnB,KAAA,CAAEvI,EAAAA,GAAMC,IACR,CAACuI,EAASC,CAAW,EAAGnG,WAAS,EAAA,EACjCsC,EAAapC,SAAO,IAAA,EAEpB3B,EAAQD,EAAmB,CAAEC,MAAOwH,EAAe3I,MAAAA,CAAAA,CAAM,EAE/D,cACGC,EAAAA,CACC/B,MAAO,CACL0C,gBAAiBnB,EAAMoB,eACvBmI,aAAc,EACdC,cAAe,MACfC,WAAY,SACZtJ,YAAa,GACbD,UAAW,GACX,GAAGzB,CACL,kBAECQ,EAAAA,CACCD,IAAKyG,EACL9E,KAAK,OACL+I,SAAUP,GAAc,KACxBzI,QAAS,IAAM4I,EAAW,EAAA,EAE1B,eAACK,MAAAA,CAAIlL,MAAO,CAAEmL,aAAc,EAAGC,YAAa,EAAGC,aAAc,CAAE,EAC5DX,SAAAA,EACC9K,EAAA,IAAC0B,EAAAA,CAAKtB,MAAO,CAAEC,MAAOsB,EAAM+J,gBAAiB,EAAIZ,SAAAA,CAAAA,CAEjD,EAAArJ,EAAA,KAAA0E,WAAA,iBACGzE,EAAAA,CAAKtB,MAAO,CAAEC,MAAOsB,EAAM+J,gBAAiB,EAC1ClH,SAAAA,EAASnB,EAAOC,CAAAA,CAAAA,GACX,UACP5B,EAAAA,CAAMyB,SAAAA,EAAWP,EAAI,IAAA,CAAA,GAAc,UACnC+I,GAAAA,CACCzJ,MAAAA,EACAmB,MAAAA,EACAuI,OAAQ,GACRC,WACEjJ,IAAO,YACPA,IAAO,WACPA,IAAO,kBACPA,IAAO,SAAA,gBAOlBhC,EAAAA,CAAO0B,KAAK,OAAOD,QAAS0I,EAAUjK,aAAY0B,EAAE,eAAA,EACnD,eAACsJ,GAAAA,CACC1L,MAAO,CACLY,MAAO,EACPC,OAAQ,EACR8K,OAAQ,CACV,CAAA,WAIHtC,EAAAA,CACCrC,WAAAA,EACAkC,UAAU,eACVI,OAAQsB,EACRrB,aAAc,IAAMsB,EAAW,EAAA,EAC/Bb,6BAA8BC,GAIxBA,aAAmB2B,aAAe3B,EAAQC,QAAQC,UAChClG,EAAA,GACb,IAELA,GACkBA,EAAA,GACb,IAGF,GAETjE,MAAO,CAAEY,MAAO,IAAKoI,QAAS,GAAI/I,MAAOsB,EAAM6I,YAAa,EAC5DZ,cAAY,uBAEZ,eAACa,GAAAA,CACCpH,MAAOwH,EACPjI,GAAAA,EACAV,MACEmB,IAAU,UAAY,OAAOnB,GAAU,SACnC+J,GAAkB/J,CAClBA,EAAAA,EAENoB,QAAAA,EACAoH,OAAQpJ,EACRqJ,QAAS,IAAMM,EAAW,EAAA,CAAA,OAKpC,CCrHO,SAASiB,GAAe,CAC7B3K,WAAAA,EACA4K,SAAAA,EACApB,SAAAA,EACA1J,aAAAA,EACA+K,qBAAAA,GACoB,CACpB,cACGjK,EAAAA,CACC/B,MAAO,CACL+K,cAAe,MACfC,WAAY,aACZlF,SAAU,MACZ,kBAEC9E,GAAAA,CACCC,aAAAA,EACAC,SAAU8K,EACV7K,WAAAA,CAAAA,GAEDA,EAAWgD,IAAI,CAACgB,EAA6B8G,UAC3CzB,GAAAA,CAECE,WAAYvF,EAAOuF,WACnBzH,MAAOkC,EAAOlC,MACdT,GAAI2C,EAAO3C,GACXV,MAAOqD,EAAOrD,MACdoB,QAASiC,EAAOjC,QAChBhC,SAAUgL,GAAaH,EAAS5G,EAAQ+G,CAAAA,EACxCvB,SAAU,IAAMA,EAASxF,CAAAA,CAPpB8G,EAAAA,CAAAA,CAAAA,IAYf"}